#!/usr/bin/env node

const args = process.argv.slice(2);
const label = args[0];
global.times = Number(args[1]) || 1000;

const { PerformanceObserver, performance } = require('perf_hooks');
const toMB = v => Math.round(v / 1024 / 1024 * 100) / 100;
let previousHeap = process.memoryUsage().heapUsed;

function memory() {
    const heap = process.memoryUsage().heapUsed;
    p = previousHeap;
    previousHeap = process.memoryUsage().heapUsed;
    return `${toMB(heap - p)} MB`;
}

const obs = new PerformanceObserver((items) => {
    const { name, duration } = items.getEntries()[0];
    process.stdout.write(JSON.stringify([
        name,
        memory(),
        `${duration} MS`
    ]));
    performance.clearMarks();
});

obs.observe({ entryTypes: ['measure'] });

performance.mark(`${label}_start`);

process.on('exit', () => {
    performance.mark(`${label}_end`);
    performance.measure(label, `${label}_start`, `${label}_end`);
    obs.disconnect();
});
